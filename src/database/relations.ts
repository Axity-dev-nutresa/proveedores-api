import type {Sequelize} from 'sequelize'

export const relations = ({models}: Sequelize) => {
  const {Supplier, Employee, PersonalData, ContactData, EnterpriseData} = models
  const {DniType, BloodGroup, Gender, CivilStatus, AcademicLevel} = models
  const {Role, Position, Eps, Afp, Ccf, Province, City} = models
  const {Business, Company, Regional, Location, CompanyType, Service} = models
  Employee.belongsTo(Supplier, {foreignKey: 'supplier'})
  Supplier.hasMany(Employee, {foreignKey: 'supplier'})
  Business.hasMany(Supplier, {foreignKey: 'business'})
  Supplier.belongsTo(Business, {foreignKey: 'business'})
  Company.hasMany(Supplier, {foreignKey: 'company'})
  Supplier.belongsTo(Company, {foreignKey: 'company'})
  Regional.hasMany(Supplier, {foreignKey: 'regional'})
  Supplier.belongsTo(Regional, {foreignKey: 'regional'})
  Location.hasMany(Supplier, {foreignKey: 'location'})
  Supplier.belongsTo(Location, {foreignKey: 'location'})
  CompanyType.hasMany(Supplier, {foreignKey: 'company_type'})
  Supplier.belongsTo(CompanyType, {foreignKey: 'company_type'})
  Service.hasMany(Supplier, {foreignKey: 'service'})
  Supplier.belongsTo(Service, {foreignKey: 'service'})
  PersonalData.belongsTo(Employee, {foreignKey: 'uuid'})
  Employee.hasOne(PersonalData, {foreignKey: 'uuid'})
  ContactData.belongsTo(Employee, {foreignKey: 'uuid'})
  Employee.hasOne(ContactData, {foreignKey: 'uuid'})
  EnterpriseData.belongsTo(Employee, {foreignKey: 'uuid'})
  Employee.hasOne(EnterpriseData, {foreignKey: 'uuid'})
  DniType.hasMany(Employee, {foreignKey: 'dniType'})
  Employee.belongsTo(DniType, {foreignKey: 'dniType'})
  BloodGroup.hasMany(PersonalData, {foreignKey: 'bloodGroup'})
  PersonalData.belongsTo(BloodGroup, {foreignKey: 'bloodGroup'})
  Gender.hasMany(PersonalData, {foreignKey: 'gender'})
  PersonalData.belongsTo(Gender, {foreignKey: 'gender'})
  CivilStatus.hasMany(PersonalData, {foreignKey: 'civil_status'})
  PersonalData.belongsTo(CivilStatus, {foreignKey: 'civil_status'})
  AcademicLevel.hasMany(PersonalData, {foreignKey: 'academic_level'})
  PersonalData.belongsTo(AcademicLevel, {foreignKey: 'academic_level'})
  Eps.hasMany(EnterpriseData, {foreignKey: 'eps'})
  EnterpriseData.belongsTo(Eps, {foreignKey: 'eps'})
  Afp.hasMany(EnterpriseData, {foreignKey: 'afp'})
  EnterpriseData.belongsTo(Afp, {foreignKey: 'afp'})
  Ccf.hasMany(EnterpriseData, {foreignKey: 'ccf'})
  EnterpriseData.belongsTo(Ccf, {foreignKey: 'ccf'})
  Role.hasMany(EnterpriseData, {foreignKey: 'role'})
  EnterpriseData.belongsTo(Role, {foreignKey: 'role'})
  Position.hasMany(EnterpriseData, {foreignKey: 'position'})
  EnterpriseData.belongsTo(Position, {foreignKey: 'position'})
  Province.hasMany(ContactData, {foreignKey: 'province'})
  ContactData.belongsTo(Province, {foreignKey: 'province'})
  City.hasMany(ContactData, {foreignKey: 'city'})
  ContactData.belongsTo(City, {foreignKey: 'city'})
  Province.hasMany(City, {foreignKey: 'province'})
  City.belongsTo(Province, {foreignKey: 'province'})
  Province.hasMany(Ccf, {foreignKey: 'province'})
  Ccf.belongsTo(Province, {foreignKey: 'province'})
}
